name: Smart Notifications

on:
  schedule:
    # Check every 2 hours during active times (Berlin time)
    - cron: '0 7,9,11,13,15,17,19 * * *'  # 9,11,13,15,17,19,21 Berlin time (adjusted for UTC)
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run notifications'
        required: false
        default: false
        type: boolean

jobs:
  smart-notifications:
    runs-on: ubuntu-latest

    steps:
    - name: Check if it's a good time for notifications
      id: time_check
      run: |
        # Get current time in Berlin timezone properly
        BERLIN_TIME=$(TZ='Europe/Berlin' date '+%H:%M')
        BERLIN_HOUR=$(TZ='Europe/Berlin' date '+%H')
        CURRENT_MINUTE=$(TZ='Europe/Berlin' date '+%M')

        echo "Current Berlin time: $BERLIN_TIME"
        echo "Current Berlin hour: $BERLIN_HOUR"
        echo "Current minute: $CURRENT_MINUTE"

        # Convert to numeric for comparison
        HOUR_NUM=$((10#$BERLIN_HOUR))

        # Only run during reasonable hours (9 AM to 9 PM Berlin time)
        if [ $HOUR_NUM -ge 9 ] && [ $HOUR_NUM -le 21 ]; then
          echo "should_run=true" >> $GITHUB_OUTPUT

          # Determine time slot
          if [ $HOUR_NUM -ge 9 ] && [ $HOUR_NUM -le 12 ]; then
            echo "time_slot=morning" >> $GITHUB_OUTPUT
          elif [ $HOUR_NUM -ge 13 ] && [ $HOUR_NUM -le 17 ]; then
            echo "time_slot=afternoon" >> $GITHUB_OUTPUT
          else
            echo "time_slot=evening" >> $GITHUB_OUTPUT
          fi
        else
          echo "should_run=false" >> $GITHUB_OUTPUT
          echo "Outside notification hours (9-21 Berlin time)"
        fi

    - name: Send smart notifications
      if: steps.time_check.outputs.should_run == 'true' || github.event.inputs.force_run == 'true'
      run: |
        TIME_SLOT="${{ steps.time_check.outputs.time_slot }}"
        echo "üîî Smart notifications at $(date) - Time slot: $TIME_SLOT"

        # Determine server URL (update this based on your current deployment)
        # For local development: http://localhost:3001
        # For TrueNAS: https://dickerchen.crackhost.com
        SERVER_URL="${{ secrets.SERVER_URL || 'http://dickerchen.crackhost.com' }}"
        
        echo "üåê Using server URL: $SERVER_URL"

        # Send notifications with proper error handling
        echo "üì¢ Sending smart notifications for time slot: $TIME_SLOT"
        
        if curl -f --max-time 15 "$SERVER_URL/api/send-notifications/$TIME_SLOT" \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.NOTIFICATION_SECRET }}" \
          -H "Content-Type: application/json" \
          -d '{}' 2>/dev/null; then
          echo "‚úÖ Smart notifications sent successfully"
        else
          echo "‚ö†Ô∏è Server unreachable or notifications failed - will try again later"
          echo "URL attempted: $SERVER_URL/api/send-notifications/$TIME_SLOT"
        fi

    - name: Log result
      run: |
        echo "üìä Smart notification check completed at $(date)"
